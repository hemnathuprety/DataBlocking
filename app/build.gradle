plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("org.jetbrains.kotlin.plugin.compose")
}
def libs = rootProject.ext.appDependency
android {
    namespace 'com.hemnath.datablocking'
    compileSdk 34

    defaultConfig {
        applicationId "com.hemnath.datablocking"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_PLATFORM=android-22"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        buildConfigField "boolean", "PLAY_STORE_RELEASE", "true"
        buildConfigField "String", "HOSTS_FILE_URI", "\"\""
        buildConfigField "String", "GITHUB_LATEST_API", "\"\""
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_PLATFORM=android-22"
            }
        }
    }

    ndkVersion "26.1.10909125"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        buildConfig true
        dataBinding true
        viewBinding true
        compose true
        aidl true
    }
    lint {
        disable 'MissingTranslation'
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
}

composeCompiler {
    reportsDestination = layout.buildDirectory.dir("compose_compiler")
    stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
}

dependencies {
    implementation libs.app_compat
    implementation libs.constraint_layout
    implementation libs.material

    //kotlin coroutines
    implementation libs.core_ktx
    implementation libs.coroutines_core
    implementation libs.coroutines_android
    //todo   implementation libs.coroutines_play_services

    implementation libs.rxJava
    implementation libs.rxAndroid

    //Room
    implementation libs.room_ktx
    implementation libs.room_runtime
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    //compose
    implementation libs.compose_activity
    implementation libs.compose_ui
    implementation libs.tooling_preview
    implementation libs.compose_material
    androidTestImplementation libs.compose_ui_test_junit4
    debugImplementation libs.compose_ui_tooling
    debugImplementation libs.compose_ui_test_manifest

    kapt(libs.room_kapt)
    // firebase dependencies
    implementation platform(libs.firebase_bom)
    //implementation libs.firebase_analytics
    implementation libs.firebase_firestore
    implementation libs.firebase_auth_ktx
    implementation libs.firebase_auth
    implementation libs.play_services_auth
    implementation libs.firebase_storage
    implementation libs.firebase_cloud_function

    implementation libs.play_services_auth

    implementation libs.google_services

//
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
//    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'


    implementation 'de.hdodenhof:circleimageview:3.1.0'
//  **  implementation 'com.squareup.picasso:picasso:2.8'
    implementation 'me.relex:circleindicator:2.1.6'
//  **  implementation("com.squareup.okhttp3:okhttp")
//  **  implementation("com.squareup.okhttp3:logging-interceptor")
//    implementation 'com.github.aabhasr1:OtpView:v1.1.2-ktx'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'com.airbnb.android:lottie:6.1.0'
    def work_version = '2.8.1'
    implementation "androidx.work:work-runtime-ktx:$work_version"
//    implementation 'de.hdodenhof:circleimageview:3.1.0'
//    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    //implementation 'com.github.tbruyelle:rxpermissions:0.12'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
//    def latest_version = "2.01.02"
//

    testImplementation 'junit:junit:4.13.2'


    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    kapt('androidx.annotation:annotation:1.6.0')
    implementation('com.github.bumptech.glide:glide:4.15.1') {
        exclude group: "com.android.support"
    }
    kapt('com.github.bumptech.glide:compiler:4.15.1')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}